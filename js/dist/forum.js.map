{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,gC,aCwDxD,SAASC,EAAWC,GAClB,OAAOC,EAAED,GAAME,SAASC,KAAK,gBAC/B,CAGA,SAASC,EAAyBC,EAAWC,EAAmBC,EAAiBC,EAAoBC,GACnG,MAAO,uMAIgDH,EAAiB,oEAChBE,EAAkB,mKAGnBD,EAAe,oEACdE,EAAgB,0GAI7DJ,EAAS,oCAGtB,CAGA,SAASK,EAAsBL,GAC7B,MAAO,6CAEEA,EAAS,sBAEpB,CAlFAM,IAAAA,aAAAA,IAAqB,oCAAoC,YAEvDC,EAAAA,EAAAA,QAAOC,IAAAA,UAAuB,YAAY,SAAUC,GAElD,IAAIC,EAAYC,SAASL,IAAAA,MAAAA,UAAoB,iDAAmD,EAChGI,EAAYA,EAAY,EAAIA,EAAY,EAGxC,IAAMP,EAAqBG,IAAAA,WAAAA,MAAqB,8DAC1CF,EAAmBE,IAAAA,WAAAA,MAAqB,4DACxCL,EAAoBK,IAAAA,MAAAA,UAAoB,kFAAoFH,EAC5HD,EAAkBI,IAAAA,MAAAA,UAAoB,gFAAkFF,EAG9HQ,KAAKC,QACFC,iBAAiB,6KACjBC,SAAQ,SAACpB,GACRA,EAAKqB,iBAAiB,QAAQ,WAG5B,GAAIrB,EAAKsB,OAASP,EAGhB,GAA6F,GAAzFJ,IAAAA,MAAAA,UAAoB,kEAAwE,CAG9F,IAAMY,EAAgBxB,EAAWC,GAC7BI,EAAyBJ,EAAKwB,WAAWC,UAAWnB,EAAmBC,EAAiBC,EAAoBC,GAC5GL,EAAyBJ,EAAKyB,UAAWnB,EAAmBC,EAAiBC,EAAoBC,GAGrGV,EAAWC,GACPC,EAAED,EAAKwB,YAAYE,YAAYH,GAC/BtB,EAAED,GAAM0B,YAAYH,EAE1B,KAAO,CACL,IAAMA,EAAgBxB,EAAWC,GAC7BU,EAAsBV,EAAKwB,WAAWC,WACtCf,EAAsBV,EAAKyB,WAG/B1B,EAAWC,GACPC,EAAED,EAAKwB,YAAYE,YAAYH,GAC/BtB,EAAED,GAAM0B,YAAYH,EAC1B,CAEJ,GACF,GACJ,GACF,G","sources":["webpack://@huoxin/auto-collapse-long-images/webpack/bootstrap","webpack://@huoxin/auto-collapse-long-images/webpack/runtime/compat get default export","webpack://@huoxin/auto-collapse-long-images/webpack/runtime/define property getters","webpack://@huoxin/auto-collapse-long-images/webpack/runtime/hasOwnProperty shorthand","webpack://@huoxin/auto-collapse-long-images/webpack/runtime/make namespace object","webpack://@huoxin/auto-collapse-long-images/external root \"flarum.core.compat['forum/app']\"","webpack://@huoxin/auto-collapse-long-images/external root \"flarum.core.compat['common/extend']\"","webpack://@huoxin/auto-collapse-long-images/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@huoxin/auto-collapse-long-images/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport CommentPost from 'flarum/forum/components/CommentPost';\n\napp.initializers.add('huoxin/auto-collapse-long-images', () => {\n\n  extend(CommentPost.prototype, 'oncreate', function (vnode) {\n    // Get the maximum image height from the extension settings and set it to zero if it's not specified\n    var maxHeight = parseInt(app.forum.attribute('huoxin-auto-collapse-long-images.max-height')) || 0; // get max height from settings\n    maxHeight = maxHeight > 0 ? maxHeight : 0;\n\n    // Get default and custom text strings for the spoiler tags\n    const defaultText_closed = app.translator.trans('huoxin-auto-collapse-long-images.forum.default-text.closed');\n    const defaultText_open = app.translator.trans('huoxin-auto-collapse-long-images.forum.default-text.open');\n    const customText_closed = app.forum.attribute('huoxin-auto-collapse-long-images.flarumite-simple-spoilers-custom-text-closed') || defaultText_closed;\n    const customText_open = app.forum.attribute('huoxin-auto-collapse-long-images.flarumite-simple-spoilers-custom-text-open') || defaultText_open;\n\n    // Find all images in the comment that meet certain criteria (not emojis, avatars, etc.)\n    this.element\n      .querySelectorAll('img:not(.emoji):not(.Avatar):not(.PostMeta-ip img):not([data-reaction]):not([data-link-preview]):not(.flamoji img):not(.spoiler img):not(.flarumite-spoiler--content img)')\n      .forEach((node) => {\n        node.addEventListener('load', function () {\n\n          // Check if the image is taller than the maximum height\n          if (node.height > maxHeight) {\n\n            // If the \"use-flarumite-simple-spoilers\" setting is enabled\n            if (app.forum.attribute('huoxin-auto-collapse-long-images.use-flarumite-simple-spoilers') == 1) {\n\n              //Generate a custom spoiler tag for the Flarumite Simple Spoilers extension\n              const spoilerMarkup = isFancybox(node)\n                ? generateFlarumiteSpoiler(node.parentNode.outerHTML, customText_closed, customText_open, defaultText_closed, defaultText_open)\n                : generateFlarumiteSpoiler(node.outerHTML, customText_closed, customText_open, defaultText_closed, defaultText_open);\n        \n              // Replace the image with the generated spoiler tag\n              isFancybox(node)\n                ? $(node.parentNode).replaceWith(spoilerMarkup)\n                : $(node).replaceWith(spoilerMarkup);\n              \n            } else {\n              const spoilerMarkup = isFancybox(node)\n                ? generateNormalSpoiler(node.parentNode.outerHTML)\n                : generateNormalSpoiler(node.outerHTML);\n          \n              // Replace the image with the generated spoiler tag\n              isFancybox(node)\n                ? $(node.parentNode).replaceWith(spoilerMarkup)\n                : $(node).replaceWith(spoilerMarkup);\n            }\n          }\n        })\n      });\n  });\n});\n\n// Check whether an image is wrap inside Fancybox\nfunction isFancybox(node) {\n  return $(node).parent().attr('data-fancybox');\n}\n\n// Generate a custom spoiler tag used by the Flarumite Simple Spoilers extension\nfunction generateFlarumiteSpoiler(imageHtml, customText_closed, customText_open, defaultText_closed, defaultText_open) {\n  return `\n    <details class=\"flarumite-spoiler\">\n      <summary>\n        <span class=\"flarumite-spoiler--title flarumite-spoiler--title-closed\">\n          <span class=\"flarumite-spoiler--custom-text\">${customText_closed}</span>\n          <span class=\"flarumite-spoiler--default-text\">${defaultText_closed}</span>\n        </span>\n        <span class=\"flarumite-spoiler--title flarumite-spoiler--title-open\">\n          <span class=\"flarumite-spoiler--custom-text\">${customText_open}</span>\n          <span class=\"flarumite-spoiler--default-text\">${defaultText_open}</span>\n        </span>\n      </summary>\n      <div class=\"flarumite-spoiler--content\">\n        <p>${imageHtml}</p>\n      </div>\n    </details>`;\n}\n\n// Generate a normal spoiler tag\nfunction generateNormalSpoiler(imageHtml) {\n  return `\n    <details class=\"spoiler\">\n      <p>${imageHtml}</p>\n    </details>`;\n}"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","isFancybox","node","$","parent","attr","generateFlarumiteSpoiler","imageHtml","customText_closed","customText_open","defaultText_closed","defaultText_open","generateNormalSpoiler","app","extend","CommentPost","vnode","maxHeight","parseInt","this","element","querySelectorAll","forEach","addEventListener","height","spoilerMarkup","parentNode","outerHTML","replaceWith"],"sourceRoot":""}